from typing import List
from models import Task
from storage import save_tasks
import time


def add_task(tasks: List[Task], title: str) -> None:
    if not title.strip():
        raise ValueError("–ù–∞–∑–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º")

    new_id = max((task.id for task in tasks), default=0) + 1
    new_task = Task(id=new_id, title=title.strip())
    tasks.append(new_task)
    save_tasks(tasks)
    print(f'–ó–∞–¥–∞—á–∞ "{title}" –¥–æ–±–∞–≤–ª–µ–Ω–∞ —Å ID {new_id}!')


def list_tasks(tasks: List[Task]) -> None:
    if not tasks:
        print("–°–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á –ø—É—Å—Ç. –î–æ–±–∞–≤—å—Ç–µ –ø–µ—Ä–≤—É—é –∑–∞–¥–∞—á—É!")
        return

    print("–°–ø–∏—Å–æ–∫ –≤–∞—à–∏—Ö –∑–∞–¥–∞—á:")
    for task in tasks:
        print(f"[{task.id}] {task.status}: {task.title}")


def done_task(tasks: List[Task], task_id: int) -> None:
    if task_id <= 0:
        raise ValueError("ID –∑–∞–¥–∞—á–∏ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º —á–∏—Å–ª–æ–º")

    for task in tasks:
        if task.id == task_id:
            task.status = 'completed'
            save_tasks(tasks)
            print(f"–ó–∞–¥–∞—á–∞ —Å ID {task_id} –æ—Ç–º–µ—á–µ–Ω–∞ –∫–∞–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–∞—è!")
            return

    print(f"–ó–∞–¥–∞—á–∞ —Å ID {task_id} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")


def delete_task(tasks: List[Task], task_id: int) -> None:
    if task_id <= 0:
        raise ValueError("ID –∑–∞–¥–∞—á–∏ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º —á–∏—Å–ª–æ–º")

    for task in tasks:
        if task.id == task_id:
            tasks.remove(task)
            save_tasks(tasks)
            print(f"–ó–∞–¥–∞—á–∞ —Å ID {task_id} —É–¥–∞–ª–µ–Ω–∞!")
            return

    print(f"–ó–∞–¥–∞—á–∞ —Å ID {task_id} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")


def focus_timer(minutes: int) -> None:
    total_seconds = minutes * 60

    print(f"–§–æ–∫—É—Å-—Å–µ—Å—Å–∏—è –Ω–∞—á–∞–ª–∞—Å—å! –¢–∞–π–º–µ—Ä –Ω–∞ {minutes} –º–∏–Ω—É—Ç.")
    print("–ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è.")

    try:
        for remaining in range(total_seconds, 0, -1):
            mins, secs = divmod(remaining, 60)
            time_display = f"{mins:02d}:{secs:02d}"
            print(f"–û—Å—Ç–∞–ª–æ—Å—å: {time_display}", end='\r')
            time.sleep(1)

        print("\n\n–í—Ä–µ–º—è –≤—ã—à–ª–æ! –§–æ–∫—É—Å-—Å–µ—Å—Å–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞. üéâ")
        print("\a")

    except KeyboardInterrupt:
        print("\n\n–§–æ–∫—É—Å-—Å–µ—Å—Å–∏—è –ø—Ä–µ—Ä–≤–∞–Ω–∞.")
